# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U9R1uSFcXz9l465_GKfCFlQEz6uGAiIL
"""

import pickle
import pandas as pd
from sklearn.preprocessing import LabelEncoder
import random

# input_columns = ['Gender', 'Age', 'Hypertension', 'Diabetes', 'alcoholism', 'Handicap','Scheduled_Day', 'Appointment_Day','Clinic_Location']
# new=[['M',39,1.0,0.0,0.0,0.0,'Wednesday','Friday','Chennai']]
# input_data = pd.DataFrame(new, columns=input_columns)
def preprocess_input(input_data):
#     # Assuming x is a DataFrame
    gender_encoder = LabelEncoder()
    input_data['Gender'] = gender_encoder.fit_transform(input_data['Gender'])
    # input_data['Age']=input_data['Age'].astype(int)
    day_mapping = {
        'Monday': 3,
        'Tuesday': 4,
        'Wednesday': 5,
        'Thursday': 6,
        'Friday': 0,
        'Saturday':1,
        'Sunday': 2
    }
    input_data['Scheduled_Day'] = input_data['Scheduled_Day'].map(day_mapping)
    input_data['Appointment_Day'] = input_data['Appointment_Day'].map(day_mapping)

    loc_mapping = {
        'Noida': 3,
        'Bengaluru':0,
        'Chennai': 1,
        'Pune': 4,
        'Coimbatore':2,

    }
    input_data['Clinic_Location'] = input_data['Clinic_Location'].map(loc_mapping)
    return input_data
# input_columns = ['Gender', 'Age', 'Hypertension', 'Diabetes', 'alcoholism', 'Handicap','Scheduled_Day', 'Appointment_Day','Clinic_Location']
# new=[['M',39,0.0,0.0,0.0,0.0,'Wednesday','Friday','Chennai']]

def predictdata(new):
    
    input_columns = ['Gender', 'Age', 'Hypertension', 'Diabetes', 'alcoholism', 'Handicap','Scheduled_Day', 'Appointment_Day','Clinic_Location']
    input_data = pd.DataFrame(new, columns=input_columns)
    preprocessed_data = preprocess_input(input_data)
    # print(preprocessed_data)

    # pickle+.dump(nv,open('naive(1)','wb'))
    loaded_pickle_model = pickle.load(open(r"C:\\Users\\PAVI\\Downloads\\rf_model.pkl",'rb'))
    pickle_y_preds = loaded_pickle_model.predict(preprocessed_data)
    pickle_y_preds

    if pickle_y_preds == 0:
        # print("No show " ) #present
        # result = 0
        
        available_slots = [
             "9:00 AM to 10:00 AM",
             "10:00 AM to 11:00 AM",
             "2:00 PM to 3:00 PM",
             "3:00 PM to 4:00 PM",
             "4:00 PM to 5:00 PM",
            "5:00 PM to 6:00 PM",
            "7:00 PM to 8:00 PM"]
        selected_slots = random.sample(available_slots, 3)
        # for slot in selected_slots:
        #     return slot
        print("willcome")
        result=selected_slots
        show='will show'
        status='presence'
        return result,show,status
        # return result
    else:
        # print("Show")
        result = 1
    
#         available_slots = [
#         "9:00 AM to 10:00 AM",
#         "10:00 AM to 11:00 AM",
#         "2:00 PM to 3:00 PM",
#         "3:00 PM to 4:00 PM",
#         "4:00 PM to 5:00 PM",
#         "5:00 PM to 6:00 PM",
#         "7:00 PM to 8:00 PM"
# ]
#         selected_slots = random.sample(available_slots, 3)
#         # for slot in selected_slots:
#         #     return slot
        # return selected_slots
        print("wontcome")
        show='will not show'
        status='absence'
        return result,show,status

